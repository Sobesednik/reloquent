{"version":3,"sources":["../../src/lib/ask-questions.js"],"names":["askQuestions","questions","timeout","Error","keys","Object","res","reduce","acc","key","accRes","value","question","text","endsWith","defaultValue","getDefault","promise","a","answer","validation","postProcess"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;;;AAQe,eAAeA,YAAf,CAA4BC,SAA5B,EAAuCC,OAAvC,EAAgD;AAC7D,MAAI,OAAOD,SAAP,IAAoB,QAAxB,EAAkC;AAChC,UAAM,IAAIE,KAAJ,CAAU,sCAAV,CAAN;AACD;;AACD,QAAMC,OAAOC,OAAOD,IAAP,CAAYH,SAAZ,CAAb;AACA,QAAMK,MAAM,MAAMF,KAAKG,MAAL,CAAY,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChD,UAAMC,SAAS,MAAMF,GAArB;AAEA,UAAMG,QAAQV,UAAUQ,GAAV,CAAd;AACA,QAAIG,QAAJ;;AACA,YAAQ,OAAOD,KAAf;AACA,WAAK,QAAL;AACEC,mBAAW,EAAE,GAAGD;AAAL,SAAX;AACA;;AACF,WAAK,QAAL;AACEC,mBAAW;AAAEC,gBAAMF;AAAR,SAAX;AACA;;AACF;AACE,cAAM,IAAIR,KAAJ,CAAU,2CAAV,CAAN;AARF;;AAWAS,aAASC,IAAT,GAAiB,GAAED,SAASC,IAAK,GAAED,SAASC,IAAT,CAAcC,QAAd,CAAuB,GAAvB,IAA8B,EAA9B,GAAmC,GAAI,GAA1E;;AACA,QAAIF,SAASG,YAAb,EAA2B;AACzBH,eAASC,IAAT,GAAiB,GAAED,SAASC,IAAK,IAAGD,SAASG,YAAa,IAA1D;AACD;;AAED,QAAIA,YAAJ;;AACA,QAAI,OAAOH,SAASI,UAAhB,IAA8B,UAAlC,EAA8C;AAC5CD,qBAAe,MAAMH,SAASI,UAAT,EAArB;AACAJ,eAASC,IAAT,GAAiB,GAAED,SAASC,IAAK,IAAGE,YAAa,IAAjD;AACD;;AACD,UAAM;AAAEE;AAAF,QAAc,kBAAIL,SAASC,IAAb,EAAmBX,OAAnB,CAApB;AAEA,UAAMgB,IAAI,MAAMD,OAAhB;AACA,QAAIE,SAASD,KAAKH,YAAL,IAAqBH,SAASG,YAA3C;;AAEA,QAAI,OAAOH,SAASQ,UAAhB,IAA8B,UAAlC,EAA8C;AAC5CR,eAASQ,UAAT,CAAoBD,MAApB;AACD;;AACD,QAAI,OAAOP,SAASS,WAAhB,IAA+B,UAAnC,EAA+C;AAC7CF,eAAS,MAAMP,SAASS,WAAT,CAAqBF,MAArB,CAAf;AACD;;AACD,WAAO,EACL,GAAGT,MADE;AAEL,OAACD,GAAD,GAAOU;AAFF,KAAP;AAID,GAzCiB,EAyCf,EAzCe,CAAlB;AA2CA,SAAOb,GAAP;AACD","sourcesContent":["import ask from './ask'\n\n/**\n * Ask a set of questions.\n * @param {object} questions An object with questions as values\n * @param {number} [timeout] How long to wait before answer\n * @returns {Promise} a promise where keys from the questions object are validated, assigned\n * default values if required, and populated with answers. Validation function should either throw\n * or return nothing, or throw an error.\n */\nexport default async function askQuestions(questions, timeout) {\n  if (typeof questions != 'object') {\n    throw new Error('Please give an object with questions')\n  }\n  const keys = Object.keys(questions)\n  const res = await keys.reduce(async (acc, key) => {\n    const accRes = await acc\n\n    const value = questions[key]\n    let question\n    switch (typeof value) {\n    case 'object':\n      question = { ...value }\n      break\n    case 'string':\n      question = { text: value }\n      break\n    default:\n      throw new Error('A question must be a string or an object.')\n    }\n\n    question.text = `${question.text}${question.text.endsWith('?') ? '' : ':'} `\n    if (question.defaultValue) {\n      question.text = `${question.text}[${question.defaultValue}] `\n    }\n\n    let defaultValue\n    if (typeof question.getDefault == 'function') {\n      defaultValue = await question.getDefault()\n      question.text = `${question.text}[${defaultValue}] `\n    }\n    const { promise } = ask(question.text, timeout)\n\n    const a = await promise\n    let answer = a || defaultValue || question.defaultValue\n\n    if (typeof question.validation == 'function') {\n      question.validation(answer)\n    }\n    if (typeof question.postProcess == 'function') {\n      answer = await question.postProcess(answer)\n    }\n    return {\n      ...accRes,\n      [key]: answer,\n    }\n  }, {})\n\n  return res\n}\n"],"file":"ask-questions.js"}