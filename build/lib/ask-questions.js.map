{"version":3,"sources":["../../src/lib/ask-questions.js"],"names":["c","t","askQuestions","questions","timeout","Error","keys","Object","res","reduce","acc","key","accRes","value","question","text","endsWith","defaultValue","gotDefaultValue","getDefault","dv","gtd","promise","a","answer","validation","postProcess"],"mappings":";;;;;;;;AAAA;;;;AAEA;;;;AAIO,SAASA,CAAT,CAAWC,CAAX,EAAc;AACnB,SAAQ,WAAUA,CAAE,SAApB;AACD;AAED;;;;;;;;;;AAQe,eAAeC,YAAf,CAA4BC,SAA5B,EAAuCC,OAAvC,EAAgD;AAC7D,MAAI,OAAOD,SAAP,IAAoB,QAAxB,EAAkC;AAChC,UAAM,IAAIE,KAAJ,CAAU,sCAAV,CAAN;AACD;;AACD,QAAMC,OAAOC,OAAOD,IAAP,CAAYH,SAAZ,CAAb;AACA,QAAMK,MAAM,MAAMF,KAAKG,MAAL,CAAY,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAChD,UAAMC,SAAS,MAAMF,GAArB;AAEA,UAAMG,QAAQV,UAAUQ,GAAV,CAAd;AACA,QAAIG,QAAJ;;AACA,YAAQ,OAAOD,KAAf;AACA,WAAK,QAAL;AACEC,mBAAW,EAAE,GAAGD;AAAL,SAAX;AACA;;AACF,WAAK,QAAL;AACEC,mBAAW;AAAEC,gBAAMF;AAAR,SAAX;AACA;;AACF;AACE,cAAM,IAAIR,KAAJ,CAAU,2CAAV,CAAN;AARF;;AAWAS,aAASC,IAAT,GAAiB,GAAED,SAASC,IAAK,GAAED,SAASC,IAAT,CAAcC,QAAd,CAAuB,GAAvB,IAA8B,EAA9B,GAAmC,GAAI,GAA1E;AAEA,QAAIC,YAAJ;AACA,QAAIC,eAAJ;;AACA,QAAIJ,SAASG,YAAb,EAA2B;AACzBA,qBAAeH,SAASG,YAAxB;AACD;;AACD,QAAIH,SAASK,UAAb,EAAyB;AACvBD,wBAAkB,MAAMJ,SAASK,UAAT,EAAxB;AACD;;AAED,QAAIC,KAAKH,gBAAgB,EAAzB;;AACA,QAAIA,gBAAgBC,eAAhB,IAAmCD,gBAAgBC,eAAvD,EAAwE;AACtEE,WAAKpB,EAAEiB,YAAF,CAAL;AACD;;AACD,QAAII,MAAMH,mBAAmB,EAA7B;AACA,UAAMH,OAAQ,GAAED,SAASC,IAAK,GAAEK,KAAM,IAAGA,EAAG,IAAZ,GAAkB,EAAG,GAAEC,MAAO,IAAGA,GAAI,IAAd,GAAoB,EAAG,EAA9E;AACA,UAAM;AAAEC;AAAF,QAAc,kBAAIP,IAAJ,EAAUX,OAAV,CAApB;AAEA,UAAMmB,IAAI,MAAMD,OAAhB;AACA,QAAIE,SAASD,KAAKL,eAAL,IAAwBJ,SAASG,YAA9C;;AAEA,QAAI,OAAOH,SAASW,UAAhB,IAA8B,UAAlC,EAA8C;AAC5CX,eAASW,UAAT,CAAoBD,MAApB;AACD;;AACD,QAAI,OAAOV,SAASY,WAAhB,IAA+B,UAAnC,EAA+C;AAC7CF,eAAS,MAAMV,SAASY,WAAT,CAAqBF,MAArB,CAAf;AACD;;AACD,WAAO,EACL,GAAGZ,MADE;AAEL,OAACD,GAAD,GAAOa;AAFF,KAAP;AAID,GAhDiB,EAgDf,EAhDe,CAAlB;AAkDA,SAAOhB,GAAP;AACD","sourcesContent":["import ask from './ask'\n\n/**\n * Color foreground with grey\n * @param {string} t\n */\nexport function c(t) {\n  return `\\x1b[90m${t}\\x1b[0m`\n}\n\n/**\n * Ask a set of questions.\n * @param {object} questions An object with questions as values\n * @param {number} [timeout] How long to wait before answer\n * @returns {Promise} a promise where keys from the questions object are validated, assigned\n * default values if required, and populated with answers. Validation function should either throw\n * or return nothing, or throw an error.\n */\nexport default async function askQuestions(questions, timeout) {\n  if (typeof questions != 'object') {\n    throw new Error('Please give an object with questions')\n  }\n  const keys = Object.keys(questions)\n  const res = await keys.reduce(async (acc, key) => {\n    const accRes = await acc\n\n    const value = questions[key]\n    let question\n    switch (typeof value) {\n    case 'object':\n      question = { ...value }\n      break\n    case 'string':\n      question = { text: value }\n      break\n    default:\n      throw new Error('A question must be a string or an object.')\n    }\n\n    question.text = `${question.text}${question.text.endsWith('?') ? '' : ':'} `\n\n    let defaultValue\n    let gotDefaultValue\n    if (question.defaultValue) {\n      defaultValue = question.defaultValue\n    }\n    if (question.getDefault) {\n      gotDefaultValue = await question.getDefault()\n    }\n\n    let dv = defaultValue || ''\n    if (defaultValue && gotDefaultValue && defaultValue != gotDefaultValue) {\n      dv = c(defaultValue)\n    }\n    let gtd = gotDefaultValue || ''\n    const text = `${question.text}${dv ? `[${dv}] ` : ''}${gtd ? `[${gtd}] ` : ''}`\n    const { promise } = ask(text, timeout)\n\n    const a = await promise\n    let answer = a || gotDefaultValue || question.defaultValue\n\n    if (typeof question.validation == 'function') {\n      question.validation(answer)\n    }\n    if (typeof question.postProcess == 'function') {\n      answer = await question.postProcess(answer)\n    }\n    return {\n      ...accRes,\n      [key]: answer,\n    }\n  }, {})\n\n  return res\n}\n"],"file":"ask-questions.js"}